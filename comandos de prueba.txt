Alta de Customer:

curl -X POST 'https://vcsinc.com.ar:8443/customer' -H 'Content-Type: application/json' --data-binary '{"id":"999","firstName":"Jane","lastName":"Smith","email":"jane.smith@company.com"}'

Borrar un customer:

curl -X DELETE 'https://vcsinc.com.ar:8443/customer/200'

Consultar un customer:

curl -X GET 'https://vcsinc.com.ar:8443/customer/007'

Consultar todos los customers

curl -X GET 'https://vcsinc.com.ar:8443/customer'


Pruebo consultar un Customer que sé que no existe:

$ curl http://localhost:8080/customer/200
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100    23  100    23    0     0     79      0 --:--:-- --:--:-- --:--:--    79No customer with id 200

------------------------------------------------------------------------------------------------------------------------
Ahora pruebo dar de alta uno:

POST http://127.0.0.1:8080/customer
Content-Type: application/json

{
  "id": "100",
  "firstName": "Jane",
  "lastName": "Smith",
  "email": "jane.smith@company.com"
}

{"id": "100","firstName": "Jane","lastName": "Smith","email": "jane.smith@company.com"}

curl -H 'Content-Type: application/json' --data-binary '{"id": "100","firstName": "Jane","lastName": "Smith","email": "jane.smith@company.com"}' -X POST 'http://127.0.0.1:8080/customer'

$ curl -H 'Content-Type: application/json' --data-binary '{"id": "100","firstName": "Jane","lastName": "Smith","email": "jane.smith@company.com"}' -X POST 'http://127.0.0.1:8080/customer'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   112  100    25  100    87    485   1688 --:--:-- --:--:-- --:--:--  2196Customer stored correctly

------------------------------------------------------------------------------------------------------------------------

Ahora intento consultar al que di de alta arriba:

$ curl http://localhost:8080/customer/100
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100    83  100    83    0     0   5065      0 --:--:-- --:--:-- --:--:--  5187{"id":"100","firstName":"Jane","lastName":"Smith","email":"jane.smith@company.com"}

Andaaaaaaaaaaaaaaaaaaaaaa!!!!!!!!!!!!!!!!!!!!!!!!!!!

------------------------------------------------------------------------------------------------------------------------

Ahora voy a intentar correr el servidor desde línea de comandos:

Primero armo un jar según lo indica en:

https://www.jetbrains.com/help/idea/compiling-applications.html#run_packaged_jar

pude armar el JAR pero cuando intento correrlo me putea:

PS D:\home\Kotlin\ktor-http-api-sample-main\out\artifacts\creating_http_api_ktor_jar> java -jar  creating-http-api-ktor.jar '-port 8080'
Exception in thread "main" java.lang.IllegalArgumentException: Neither port nor sslPort specified. Use command line options -port/-sslPort or configure connectors in application.conf

le copio el archivo application.conf al jar y andaaaaaaa!!!!

Tira una excepción que no entiendo, pero anda.

15:01:17.545 [main] DEBUG io.netty.util.internal.PlatformDependent0 - direct buffer constructor: unavailable
java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled
        at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)

https://ktor.io/docs/deploy.html

IMPORTANTE:
El parámetro había que pasarlo con =. O sea:

PS D:\home\Kotlin\ktor-http-api-sample-main\out\artifacts\creating_http_api_ktor_jar> java -jar .\creating-http-api-ktor.jar -port=8080
Exception in thread "main" com.typesafe.config.ConfigException$Missing: No configuration setting found for key 'ktor'

Pero ahí me putea porque no encuentra el application.conf que yo le había puesto de pedo.

O sea que el archivo ese es indispensable para que corra la app (habría que tocar las reglas de armado de JAR para que
se incluya automáticamente). Con el parámetro puedo cambiar el port que definí en el archivo.

Intento que tome el archivo desde afuera:

Lo copio al directorio de jar y hago:

PS D:\home\Kotlin\ktor-http-api-sample-main\out\artifacts\creating_http_api_ktor_jar> java -jar .\creating-http-api-ktor.jar -config=application.conf -port=8080
15:40:47.900 [main] ERROR Application - Configuration file 'application' specified as command line argument was not found

pero no lo ve :-(

Le saco el punto al nombre del archivo y anda... ESTA PARECE LA FORMA

Habría que ver como hacer para que acepte nombres con . pero no quiero perder tiempo ahora.

------------------------------------------------------------------------------------------------------------------------
Veo si se puede complicar a Nativo para poder instalarlo en cualquier lado.

Hete aquí que NO por estar usando Netty.

Paso a investigar este otro:

https://github.com/ktorio/ktor-samples/tree/main/graalvm

